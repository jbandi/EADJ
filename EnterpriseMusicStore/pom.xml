<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.musicstore</groupId>
  <artifactId>EnterpriseMusicStore</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>EnterpriseMusicStore Maven Enterprise Application</name>
  <url>http://maven.apache.org</url>
  <modules>
    <module>EnterpriseMusicStore-ear</module>
    <module>EnterpriseMusicStore-web</module>
    <module>EnterpriseMusicStore-web-jsfunit</module>
    <module>EnterpriseMusicStore-ejb</module>
    <module>EnterpriseMusicStore-integration-tests</module>
  </modules>
  <build>
  	    <defaultGoal>package</defaultGoal>

      <plugins>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-compiler-plugin</artifactId>
              <version>2.0.2</version>
              <configuration>
                  <source>1.7</source>
                  <target>1.7</target>
              </configuration>
          </plugin>
          <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-ejb-plugin</artifactId>
              <version>2.1</version>
              <configuration>
                  <ejbVersion>3.1</ejbVersion>
              </configuration>
          </plugin>

                <!-- The JBoss AS plugin deploys your ear to a local JBoss EAP container -->
                <!-- Due to Maven's lack of intelligence with EARs we need 
                    to configure the jboss-as maven plugin to skip deployment for all modules. 
                    We then enable it specifically in the ear module. -->
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.jboss.maven.plugin}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>        
  </build>

    <properties>
        <!-- Explicitly declaring the source encoding eliminates the following 
         message: -->
        <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
         resources, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->

        <version.jboss.maven.plugin>7.4.Final</version.jboss.maven.plugin>

        <version.jboss.spec.javaee.6.0>3.0.2.Final-redhat-7</version.jboss.spec.javaee.6.0>

        <!-- other plugin versions -->
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.6</maven.compiler.target>
        <maven.compiler.source>1.6</maven.compiler.source>
    </properties>

    <dependencyManagement>
        <dependencies>
             <!-- Define the version of JBoss' Java EE 6 APIs we want to import. 
                Any dependencies from org.jboss.spec will have their version defined by this 
                BOM -->
             <!-- JBoss distributes a complete set of Java EE 6 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-6.0 stack (you can
                read this as the JBoss stack of the Java EE 6 APIs). You can actually
                use this stack with any version of JBoss EAP that implements Java EE 6. -->
             <dependency>
                  <groupId>org.jboss.spec</groupId>
                  <artifactId>jboss-javaee-6.0</artifactId>
                  <version>${version.jboss.spec.javaee.6.0}</version>
                  <type>pom</type>
                  <scope>import</scope>
             </dependency>
        </dependencies>
    </dependencyManagement>

</project>